#
# Linear Acoustic WE operator testing
#
try:    from rsf.cluster import *
except: from rsf.proj    import *
from rsf.recipes import wplot,geom,awe
import sys
#sys.path.append('../../operators/')
#sys.path.append('../../solvers/')
#from artmOP import artmop2d
#from Gwrapper import *
#from idOP import idop
#from LCG import *
from aweOP import *
#from enormOP import *
#from DPT import DPT

# ------------------------------------------------------------
# Parameters
par = dict(nx=800,  ox=0, dx=0.005,  lx='x', ux='km',
           nz=187 ,  oz=0, dz=0.005,  lz='z', uz='km',
           ny=800,  oy=0, dy=0.005,  ly='y', uy='km',
           nt=5001, ot=0, dt=0.0002, lt='t', ut='s',
	   nsx=601, dsx=0.005, osx=0.5,
       nsy=1  , dsy=0.005, osy=2.0,
	   nrz=187,  drz=0.005,
	   osz=0.01, orx=2.0, ory=2.0,
	   kt=200, jsnap=100,
	   f1=5, f2=15, f3=80, f4=120,
	   fhi=100, flo=5, nphi=10, nplo=10,


        # . . Modelling parameters
        verb='y',wantwf='y',
        rec_z=2,wfld_j=3000,step_j=1,

        # . . Extra imaging parameters
        ic=1,gpu=3,ngpu=2,ngpupernode=2,
        )
wplot.param(par)

par['nzrefl']=par['nz']/4

# Taper for data (in samples):
par['taper']=0

# Folder for sources and receivers
folder_ss = 'ss/'
folder_rr = 'rr/'

# ------------------------------------------------------------
# Plot rules
# 1D
plotT  ='window | scale axis=123 |' + wplot.waveplot('',par)

# 2D
plotW2D='window j3=1 |'+ wplot.igrey2d('pclip=98',par)
plotI2D=wplot.igrey2d('pclip=99',par)
plotD2D='transp |'      + wplot.dgrey2d('',par)

# 3D
plotI3D='byte gainpanel=a pclip=99 |' + wplot.igrey3d('mean=y',par)
plotW3D='window j4=30 | byte gainpanel=a pclip=100 |' + wplot.igrey4d('',par)
plotD3D='transp | put n2=%(nx)d o2=%(ox)g d2=%(dx)g label2=%(lx)s unit2=%(ux)s n3=%(ny)d o3=%(oy)g d3=%(dy)g label3=%(ly)s unit3=%(uy)s | byte gainpanel=a pclip=100 |'%par + wplot.dgrey3d('',par)

# ------------------------------------------------------------
# Wavelet
Flow('wav',None,'/beegfs/sets/cwp/code/RSF/RSF4.2_CU12.2/RSFSRC/user/utils/sformsby nt=%(nt)d dt=%(dt)g ot=%(ot)g kt=%(kt)d f1=%(f1)g f2=%(f2)g f3=%(f3)g f4=%(f4)g | math output="100000000*input" | sfbandpass flo=%(flo)g fhi=%(fhi)g nplo=%(nplo)g nphi=%(nphi)g | transp plane=12'%par)
Flow('dwav','wav','transp | deriv | transp'%par)
Flow('iwav','wav','transp | integral1 rule=t | sfbandpass flo=%(flo)g nplo=%(nplo)g | math output="input*exp(-1000*x1^2)" | bandpass flo=%(flo)g nplo=%(nplo)g | transp'%par)
Result( 'wav',plotT)
Result('dwav',plotT)
Result('iwav',plotT)

# ------------------------------------------------------------
# Sources and Receivers
#tdata = '/beegfs/projects/cwp/AlaskaDAS/data/240_tdata.rsf'
#Flow('soux',tdata,'sfput n3=979 n2=1699 | sfwindow n1=1 f1=21 n3=1 f3=0 | sfdd type=float |sfmath output="(input*0.01-598684)*0.3048"')
#Flow('souy',tdata,'sfput n3=979 n2=1699 | sfwindow n1=1 f1=22 n3=1 f3=0 | sfdd type=float |sfmath output="(input*0.01-5966135)*0.3048"')
#Flow('souz',tdata,'sfput n3=979 n2=1699 | sfwindow n1=1 f1=13 n3=1 f3=0 | sfdd type=float |sfmath output="(input*0.0001)*0.3048"')
#Flow('recx',tdata,'sfput n3=979 n2=1699 | sfwindow n1=1 f1=23 n2=1 f2=0 | sfdd type=float |sfmath output="((input*0.01-598684)*0.3048/1000)+2.0"')
#Flow('recy',tdata,'sfput n3=979 n2=1699 | sfwindow n1=1 f1=24 n2=1 f2=0 | sfdd type=float |sfmath output="(input*0.01-5966135)*0.3048/1000"')
#Flow('recz',tdata,'sfput n3=979 n2=1699 | sfwindow n1=1 f1=12 n2=1 f2=0 | sfdd type=float |sfmath output="(input*0.0001)*0.3048/1000"')

#Flow('rr2D','recx recz','cat axis=2 ${SOURCES[1]} | sftransp')

par['ns'] = par['nsx'] * par['nsy']
for ieyp in range(par['nsy']):
    for iexp in range(par['nsx']):
        etag  = '-%03d'%(ieyp*par['nsx']+iexp)
        par['xsou'] = par['osx']+iexp*par['dsx']
        par['ysou'] = par['osy']+ieyp*par['dsy']
        par['zsou'] = par['osz']
        geom.point3d(folder_ss+'ss3D'+etag,par['xsou'],par['ysou'],par['zsou'],'',par)

# ---
ss3D = [folder_ss+'ss3D'+'-%03d'%iexp for iexp in range(par['ns'])]
Flow('ss3D',ss3D,'cat axis=2 ${SOURCES[1:-1]}')
#Plot('allss2D',wplot.ssplot2d(' plotfat=24 ',par))

#Flow('soux',None,'spike n1=1 d1=1 o1=0.0 | sfmath output="2.0"')
#Flow('souy',None,'spike n1=1 d1=1 o1=0.0 | sfmath output="2.0"')
#Flow('souz',None,'spike n1=1 d1=1 o1=0.0 | sfmath output="0.5"')

# ---
geom.vertical2d('rr2Dxz',par['orx'],'',par)
geom.vertical2d('rr2Dyz',par['ory'],'',par)

Flow('rr2Dx','rr2Dxz','window n1=1 f1=0 | sftransp')
Flow('rr3D',['rr2Dx','rr2Dyz'],'cat axis=1 ${SOURCES[1:2]}')

par['skip']=1
for iexp in range(par['nrz']):
	etag = '-%03d'%iexp
	par['rskip'] = iexp*par['skip']
	Flow(folder_rr+'rr3D'+etag,'rr3D','window n2=1 f2=%(rskip)d'%par)

Flow('soux','rr3D','window n1=1 f1=0')
Flow('souy','rr3D','window n1=1 f1=1')
Flow('souz','rr3D','window n1=1 f1=2')




#Flow('recx','rr3D','window n1=1 f1=0 | window n1=1 f1=0')
#Flow('recy','rr3D','window n1=1 f1=1 | window n1=1 f1=0')
#Flow('recz','rr3D','window n1=1 f1=2 | window n1=1 f1=100')
# ------------------------------------------------------------
# velocity
Flow('overthrust',['/beegfs/sets/cwp/data/overthrust/overthrust'],'sfwindow n1=800 n2=800')

Flow('overthrust_bt',None,'math n1=%(nx)d n2=%(ny)d n3=197 output=6.0'%par)

Flow('overthrust3D',['overthrust','overthrust_bt'],'cat axis=3 space=n ${SOURCES[1:2]} | put d1=0.005 d2=0.005 d3=0.005 o1=0 o2=0 o3=0')
#Flow('vp1',None,'math n1=67 n2=%(nx)d output="2.0" | sfput d1=%(dz)g d2=%(dx)g o1=0    o2=%(ox)g'%par)
#Flow('vp2',None,'math n1=67 n2=%(nx)d output="2.5" | sfput d1=%(dz)g d2=%(dx)g o1=.335 o2=%(ox)g'%par)
#Flow('vp3',None,'math n1=282 n2=%(nx)d output="3.0" | sfput d1=%(dz)g d2=%(dx)g o1=.67  o2=%(ox)g'%par)
#Flow('vp2D',['vp1','vp2','vp3'],'cat axis=1 space=n ${SOURCES[1:3]}')
#Flow('vp3D','vp2D','spray axis=3 n=%(ny)d d=%(dy)g o=%(oy)g | transp plane=12 memsize=10000 | transp plane=23 memsize=10000'%par)

## . . reflectivity
#Flow('refl2D','vp','ai2refl')

# ------------------------------------------------------------
# Forward Modeling all datasets
#Flow('m1',None,'math n1=769 d1=0.0002 o1=-0.0392 n2=205 d2=0.005 o1=0 output="0"')
#Flow('m2',None,'math n1=769 d1=0.0002 o1=-0.0392 n2=200 d2=0.005 o1=0 output="1"')
#Flow('mask','m1 m2','cat axis=2 ${SOURCES[1]} | smooth rect2=3 repeat=3 | rtoc')

Flow('src','wav','transp')

par['rec_z']=2
# . . Perform modelling (GPU+MPI)
for iexp in range(par['nrz']):
    par['iexp'] = iexp
    etag = '-%03d'%iexp
    Flow('soux'+etag,'soux','window n1=1 f1=%(iexp)d | put o1=0'%par)
    Flow('souy'+etag,'souy','window n1=1 f1=%(iexp)d | put o1=0'%par)
    Flow('souz'+etag,'souz','window n1=1 f1=%(iexp)d | put o1=0'%par)

    Flow(['data'+etag,'wfld'+etag],['src', 'overthrust3D', 'souz'+etag, 'soux'+etag, 'souy'+etag],'''
        /usr/bin/time /beegfs/sets/cwp/code/RSF/RSF4.2_CU12.2/RSFSRC/user/cwp_gpu/sfwfld3dGPU
        src=${SOURCES[0]}
        vel=${SOURCES[1]}
        souz=${SOURCES[2]}
        soux=${SOURCES[3]}
        souy=${SOURCES[4]}
        dat=${TARGETS[0]}
        wfld=${TARGETS[1]}
        verb=%(verb)s  verb=%(verb)s wantwf=%(wantwf)s rec_z=%(rec_z)d
        wfld_j=%(wfld_j)d step_j=%(step_j)d gpu=0 ngpu=%(ngpu)d'''%par)

d3D = ['data'+'-%03d'%iexp for iexp in range(par['nrz'])]
Flow('data3D',d3D,'cat axis=4 ${SOURCES[1:-1]}')
Flow('data3D_window','data3D','window n1=601 min1=0.5 n2=601 min2=0.5 j3=12')

#Flow('w2','wfld','window n4=1 f4=5 |byte gainpanel=a pclip=99 | transp plane=23 memsize=10000 |transp plane=12  memsize=10000')

#Result('w2','grey3 frame1=1 frame2=1 frame3=1 '%par)

#for iexp in range(par['ns']):
#	etag  = '-%03d'%iexp
#	A = aweop3d('vp3D',par,ss3D[iexp],'rr3D','',custom=' verb=y dabc=y ')
#	A.FORW('wav','d'+etag)


#	par['tcut'] = 0
#	Flow('dp'+etag,['d'+etag,'mask'],'transp | fft1 | fft3 | math mask=${SOURCES[1]} output="input*mask" | fft3 inv=y | fft1 inv=y | mutter t0=%(tcut)g v0=100000000 | transp | mutter t0=1.2 v0=1000000000 inner=y'%par)

#	Plot('d' +etag,'grey clip=0.1 title="Original"')
#	Plot('dp'+etag,'grey clip=0.1 title="Filtered"')

# Concatenate data:
#dat2D = ['dp'+'-%03d'%iexp for iexp in range(par['nsx'])]
#Flow('alld',dat2D,'cat axis=3 ${SOURCES[1:-1]}')


# Taper observed data:
#Flow('alltapd','alld','costaper nw1=%(taper)d'%par)

# Convert to reciprical geometry
#Flow('alltapd_recip','alltapd','window n1=%(nrx)d j1=%(skip)d | sftransp plane=13 memsize=2000 | sfput d1=%(dsx)g o1=%(osx)g'%par)

End()
